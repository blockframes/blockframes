@use 'sass:map';
@use '~@angular/material' as mat;

@mixin color($theme) {
  $config: mat.get-color-config($theme);
  $foreground: map.get($config, 'foreground');
  $background: map.get($config, 'background');
  $primary: map.get($config, 'primary');
  $accent: map.get($config, 'accent');
  $warn: map.get($config, 'warn');

  ///////////////////////
  // BUTTON WITH ICONS //
  ///////////////////////

  // No background

  .mat-stroked-button,
  .mat-button,
  .mat-icon-button {
    color: mat.get-color-from-palette($foreground, text);
    &.mat-primary {
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($primary);
      }
    }
    &.mat-accent {
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($accent);
      }
    }
    &.mat-warn {
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($warn);
      }
    }

    &.mat-button-disabled {
      color: mat.get-color-from-palette($foreground, disabled-text);
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($foreground, disabled-text);
      }
    }
  }

  // With background

  .mat-raised-button,
  .mat-flat-button,
  .mat-fab,
  .mat-mini-fab {
    &.mat-primary {
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($primary, 'default-contrast');
      }
      &:hover {
        background-color: mat.get-color-from-palette($primary, 800);
      }
    }
    &.mat-accent {
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($accent, 'default-contrast');
      }
      &:hover {
        background-color: mat.get-color-from-palette($accent, 800);
      }
    }
    &.mat-warn {
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($warn, 'default-contrast');
      }
      &:hover {
        background-color: mat.get-color-from-palette($warn, 800);
      }
    }
    // Used only in the upload component, remove it when the component will be reworked
    &.mat-divider {
      background-color: mat.get-color-from-palette($foreground, 'divider');
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($primary, 'default-contrast');
      }
    }

    &.mat-button-disabled {
      background-color: mat.get-color-from-palette($background, disabled-button);
      // Prevent override from above style
      &:hover {
        background-color: mat.get-color-from-palette($background, disabled-button);
      }
      svg g,
      svg polygon,
      svg path {
        fill: mat.get-color-from-palette($foreground, disabled-button);
      }
    }
  }

  .mat-button,
  .mat-flat-button,
  .mat-raised-button,
  .mat-stroked-button {
    padding: 14px 24px;
  }

  .mat-button.mat-button-disabled {
    background-color: mat.get-color-from-palette($background, disabled-button);
  }

  // Center close button
  .mat-simple-snackbar .mat-button {
    padding: 0 20px;
  }

  .mat-stroked-button:not(.mat-button-disabled) {
    border-radius: 26px;
    border-color: mat.get-color-from-palette($foreground, divider);
    &.mat-primary {
      border-color: mat.get-color-from-palette($primary);
      &:hover {
        border-color: mat.get-color-from-palette($primary, 800);
      }
    }
    &.mat-accent {
      border-color: mat.get-color-from-palette($accent);
      &:hover {
        border-color: mat.get-color-from-palette($accent, 800);
      }
    }
    &.mat-warn {
      border-color: mat.get-color-from-palette($warn);
      &:hover {
        border-color: mat.get-color-from-palette($warn, 800);
      }
    }
  }

  .mat-stroked-button {
    border-radius: 26px;
    border-width: 1.5px;
  }

  .mat-flat-button {
    border-radius: 26px;
  }

  .mat-fab,
  .mat-mini-fab {
    @include mat.overridable-elevation(0);
  }

  .mat-fab {
    &.active {
      background-color: var(--active);
    }
  }

  // Add a border around the avatar of the user in the toolbar
  auth-widget button[mat-icon-button] img {
    border: 1px solid mat.get-color-from-palette($foreground, divider);
  }

  // Override the padding of the button wrapper to get icon vertical aligned in the mini fab button
  // For example, see available versions page.
  tunnel-page section article button[mat-mini-fab] .mat-button-wrapper {
    padding: 0;
  }
}

// TYPOGRAPHY
@mixin typography($theme) {
  $config: mat.get-typography-config($theme);

  // note: mat-icon-button is not here on purpose
  .mat-button,
  .mat-raised-button,
  .mat-stroked-button,
  .mat-flat-button,
  .mat-fab,
  .mat-mini-fab {
    letter-spacing: mat.letter-spacing($config, button);
    line-height: mat.line-height($config, button);
  }

  .mat-button-toggle-label-content {
    font-size: mat.font-size($config, button);
  }
}
