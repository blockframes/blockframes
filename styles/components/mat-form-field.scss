@use 'sass:map';
@use '@angular/material' as mat;
@use '../typography' as typography;

@mixin color($theme) {
  $config: mat.get-color-config($theme);
  $primary: map.get($config, 'primary');
  $warn: map.get($config, 'warn');
  $foreground: map.get($config, 'foreground');


  .mat-form-field {
    &.ng-valid, &.ng-invalid, &.mat-form-field-type-mat-chip-list {
      .mat-form-field-wrapper {
        padding-bottom: 0.6em;
      } 
    }

    &-underline {
      position: static;
    }

    &-subscript-wrapper {
      position: static;
    }

    &[no-underline] {
      .mat-form-field-underline {
        display: none;
      }
    }

    // this is needed to make mat-form field icons red on error
    &.ng-invalid.ng-touched {
      .mat-icon {
        svg {
          path {
            fill: mat.get-color-from-palette($warn);
          }
        }
      }

      mat-datepicker-toggle {
        button {
          svg {
            margin-bottom: 4px;
            path {
              fill: mat.get-color-from-palette($warn);
            }
          }
        }
      }
    }

    mat-datepicker-toggle.small {
      button {
        height: 20px;
        line-height: 20px;
      }
    }

    mat-icon[matPrefix] {
      margin-left: 10px;
      margin-right: 10px;
    }
  }

  // OUTLINE
  .mat-form-field-appearance-outline {
    .mat-form-field-outline {
      color: mat.get-color-from-palette($foreground, divider);
    }
    // This one is when mat-form-field is hovered
    .mat-form-field-outline-thick {
      color: mat.get-color-from-palette($primary);

      .mat-form-field-outline-start,
      .mat-form-field-outline-end,
      .mat-form-field-outline-gap {
        border-width: 1px;
      }
    }
    &.mat-form-field-disabled {
      .mat-form-field-outline {
        color: mat.get-color-from-palette($foreground, divider);
      }
    }
  }
}

// TYPOGRAPHY
@mixin typography($theme) {
  $config: mat.get-typography-config($theme);

  .mat-mdc-form-field,
  .mat-mdc-floating-label {
    @include mat.typography-level(typography.$bf-typography, 'input');
  }
}

