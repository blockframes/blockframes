@use 'sass:map';
@use '@angular/material' as mat;
@use '../typography' as typography;

@mixin color($theme) {
  $config: mat.get-color-config($theme);
  $primary: map.get($config, 'primary');
  $background: map.get($config, 'background');
  $foreground: map.get($config , 'foreground');

  .mat-mdc-nav-list, .mat-mdc-list, .mat-mdc-selection-list {
    border-radius: 10px;
  }

  .mat-mdc-list-base {
    padding-top: 0; // Used to glue several mat-list together
    background-color: mat.get-color-from-palette($background, app-bar);
    border: 1px solid mat.get-color-from-palette($foreground, divider);
    padding-bottom: 0;

    --mdc-list-list-item-focus-state-layer-color: transparent;
  }

  .mat-mdc-tab-link.mdc-tab {
    padding: 0;
    height: 60px;
  }

  // Use to let active link in color in mat-nav-list, used with routerLinkActive
  .mat-mdc-nav-list a.active {
    color: mat.get-color-from-palette($primary, 500);
    background-color: rgba(mat.get-color-from-palette($primary, 500), 0.05);

    // Mat icons inside active link should be colored too
    .mat-mdc-list-icon {
      path, g, polygon {
        fill: mat.get-color-from-palette($primary, 500);
      }
    }
  }

  .mat-mdc-list-base a.mat-mdc-list-item.active:not(.mdc-list-item.mdc-list-item--with-two-lines) .mat-mdc-list-item-unscoped-content {
    color: mat.get-color-from-palette($primary, 500);
    mat-icon {
      color: mat.get-color-from-palette($primary, 500);
    }
  }

  // Every nav-list in a sidenav won't get border
  .mat-mdc-sidenav .mat-mdc-nav-list, .mat-mdc-list-base {
    border: none;
    background: transparent;
  }

  // Color the tab that is active and set the size of the ink-bar to the text' size
  nav[mat-tab-nav-bar] a[mat-tab-link],
  nav[mat-tab-nav-bar] button[mat-tab-link],
  .mat-mdc-tab-label {
    opacity: 1;
    min-width: 10px;
    &.mat-mdc-tab-label-active {
      color: mat.get-color-from-palette($primary, 500);
    }
  }

  // Add padding if tabs are not stretched
  nav[mat-stretch-tabs="false"] a[mat-tab-link],
  nav[mat-stretch-tabs="false"] button[mat-tab-link],
  .mat-mdc-tab-nav-bar[mat-stretch-tabs="false"] button[mat-tab-link], 
  .mat-mdc-tab-nav-bar[mat-stretch-tabs="false"] a[mat-tab-link]{
    padding: 0 16px;
  }

  .mat-mdc-list-base .mat-mdc-list-item:not(.mdc-list-item.mdc-list-item--with-two-lines) {
    height: 56px;
    .mat-mdc-list-item-unscoped-content,
    .mat-mdc-list-item-unscoped-content .mat-mdc-select-value {
      color: mat.get-color-from-palette($foreground, 'text');
      mat-icon {
        margin-left: 8px;
        margin-bottom: -6px;
        margin-right: 16px;
      }

      button.mdc-fab--mini mat-icon { margin: 0; }

      mat-icon.mat-badge-overlap {
        vertical-align: middle;
        margin-bottom: -9px;
      }

    }
    .mat-mdc-list-item-unscoped-content .mat-mdc-select-value {
      width: 90%;
    }
  }

  .mat-mdc-optgroup .mdc-list-item__primary-text { width: 100%; }
  .mat-mdc-optgroup .group label { font-weight: bold; }

  .mat-mdc-list-base .mdc-list-item.mdc-list-item--with-two-lines {
    .mat-mdc-list-item-avatar {  margin-top: 8px; }
    .mat-mdc-list-item-line { margin: 0; }
    .mat-mdc-list-item-meta {
      &.mat-mdc-icon-button { margin-top: 6px; }
      * { align-items: center; }
    }

    .mat-mdc-list-item-meta::before { height: 12px; }
  }

  .cdk-overlay-pane:has(.mat-mdc-select-panel) { min-width: fit-content; }
}

@mixin typography($theme) {
  .mat-mdc-list-base .mat-mdc-list-item .mat-mdc-list-item-unscoped-content,
  .mat-mdc-list-base .mat-mdc-list-item .mat-mdc-list-option,
  .mat-mdc-list-base .mat-mdc-list-item .mat-mdc-list-item-unscoped-content .mat-mdc-select-value {
    @include mat.typography-level(typography.$bf-typography, 'subtitle-2');
  }

  .mat-mdc-select .mat-mdc-select-value, .mat-mdc-option .mdc-list-item__primary-text {
    @include mat.typography-level(typography.$bf-typography, 'body-2');
  }
}