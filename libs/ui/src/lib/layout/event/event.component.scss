@import '@angular/flex-layout/mq';

:host {
  display: flex;
  flex-direction: row;
  height: 100%;
}

aside {
  height: 100%;
  display: flex;
  flex-direction: column;
  flex: 1;
  border-right: solid 1px var(--foreground-divider);
  background-color: var(--background-card);
  color: var(--foreground-text);

  mat-toolbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

mat-sidenav-container {
  height: 100%;
}

#event-content {
  height: 100%;
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;

  header {
    width: 100%;

    button {
      margin-right: 24px;
    }

    /* We can't use the fxLayoutGap directive because it set the margin right
    property to the specified value. But we need to use margin-right:auto to split
    the content and we don't want to use !important */
    a {
      margin-right: 24px;
      align-self: center;
    }

    a:first-of-type {
      margin-left: auto;
    }
  }

  main {
    height: 100%;
    overflow: auto;

    .page {
      min-height: calc(100% - 140px); /** 140px : bf-footer height . This will need an update if footer height is changed **/
    }
  }
}

app-bar {
  padding: 0 24px;
  position: relative;
}

app-bar > a[app-logo] {
  position: absolute;
  top: 0;
  bottom: 0;
  margin-block: auto;
}

/* Outline none used to remove the automatic rectangular focus on Safari */
a[app-logo] {
  outline: none;
}

@include layout-bp(gt-xs) {
  a.hide,
  aside button {
    display: none;
  }

  aside {
    a[app-logo-icon] {
      display: block;
    }
    a[app-logo] {
      display: none;
    }

    &.opened {
      a[app-logo-icon] {
        display: none;
      }
      a[app-logo] {
        display: block;
      }
    }
  }
}

@include layout-bp(xs) {
  mat-divider,
  auth-widget,
  a[app-logo-icon],
  header > a[mat-icon-button] {
    display: none;
  }

  aside {
    transform: translateX(-100%);
    position: absolute;
    top: 0;
    z-index: 8;
    transition: transform 0.4s;
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
    
    &.opened {
      transform: translateX(0);
    }
  }

  .bg-navigation {
    position: fixed;
    height: 100%;
    width: 100%;
    background-color: rgba(0 0 0 / 60%);
    z-index: 4;
    left: 0;
    visibility: visible;
    transition: 0.4s;
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);

    &.hide {
      visibility: hidden;
      background-color: transparent;
    }
  }
}

@include layout-bp(lt-sm) {
  mat-divider,
  auth-widget {
    display: none;
  }
}
